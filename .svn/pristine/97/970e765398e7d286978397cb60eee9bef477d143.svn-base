package kr.or.ddit.notice.controller;

import javax.inject.Inject;

import org.springframework.security.core.Authentication;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import kr.or.ddit.notice.dao.NotificationDAO;
import kr.or.ddit.notice.service.NotificationService;
import kr.or.ddit.notice.vo.NoticeDetailVO;
import kr.or.ddit.notice.vo.NotificationVO;

@Controller
@RequestMapping("/notice")
public class NoticeDetailController {

	@Inject
	private NotificationDAO notificationDAO;
	
	@Inject
	private NotificationService service;
	
	
	@GetMapping("notificationView.do")
	public String noticeDetail(
		@RequestParam String notiCd,
		Model model,
		Authentication authentcation
	) {
		// 읽음 체크하기
		UserDetails userdetail = (UserDetails)authentcation.getPrincipal();
		String reader = userdetail.getUsername();
		NoticeDetailVO detail = new NoticeDetailVO();
		detail.setNotiCd(notiCd);
		detail.setNotiReceiver(reader);
		int cnt = service.confirmReader(detail);
		// 수신자 등록이 된경우 읽음 상태 변경
		if(cnt == 1) {
			service.readNotification(detail);
		}
		// 상세 페이지 읽어오기
		NotificationVO notice = notificationDAO.notificationDetail(notiCd);
		model.addAttribute("notification",notice);
		return "notice/ajax/noticeView";
	}
	
}
