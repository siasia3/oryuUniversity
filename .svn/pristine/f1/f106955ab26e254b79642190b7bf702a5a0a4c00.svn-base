<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<script src='<%=request.getContextPath()%>/resources/fullcalendar-6.1.8/dist/index.global.js'></script>
<style>
  #calendar {
/*     width: 50%; */
/*    	margin: 0 auto; */
	flex: 1;
    padding: 20px;
    font-family: Arial, Helvetica Neue, Helvetica, sans-serif;
    font-size: 14px;
  }
 
	#listView {
	width: 40%;
	height: auto;
/* 	margin-top: 88px; */
	}
 
  .card.calendar-container {
	    display: flex;
	    flex-direction: row;
	    justify-content: space-between;
	    align-items: flex-start;
	    margin-left: 25px;
	    margin-top: 20px;
	    margin-right: 25px;
	}
	
	.card.calendar-container #calendar {
	    flex: 0.75;
	    margin-right: -20px;
	}
	
	.card.calendar-container #listView {
	    flex: 0.25;
	    height: 95%;
	}
	
	.card.box-shadow{
		margin: 30px;
	}

	.list-view {
	    flex: 0.25;
	    margin-left: 20px;
  	}
	
  .event-set {
    display: flex;
    flex-direction: column;
    padding: 10px 0;
/*     border-top: 1px solid #ccc; */
  }

  .event-title {
    display: flex;
    align-items: center;
    margin-bottom: 10px;
    padding-left: 30px;
  }

  .distinction-circle {
    width: 10px;
    height: 10px;
    border-radius: 50%;
    margin-right: 5px;
  }

  .event-title span {
    font-weight: bold;
  }

  .event-date {
    font-size: 12px;
    color: #666;
    margin-left: 15px;
    margin-bottom: 10px;
    padding-left: 25px;
  }

  .separator {
	border: none;
    border-top: 1px solid #666;
    margin: 10px 25px 3px 25px;
  }
 
  .list-title {
	  font-size: 20px;
	  font-weight: bold;
	  margin-bottom: 10px;
	  padding: 20px;
	  border-bottom: 1px solid #ccc;
	}
	/* 일요일 색깔 */
   .fc-day-sun a {
     color: red;
     text-decoration: none;
   }

   /* 토요일 색깔 */
   .fc-day-sat a {
     color: blue;
     text-decoration: none;
   }
</style>

<!-- 모달창 -->
<!-- <button type="button" class="btn btn-outline-light" data-toggle="modal" data-target="#exampleModal">일정 추가</button> -->

<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">일정 정보</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <form id="modalForm">
          <input type="hidden" id="asCd" name="asCd">
          <div class="form-group">
		    <label for="asDistinction">구분</label>
		    <select class="form-control" id="asDistinction" name="asDistinction">
		        <option value="전체" selected>전체</option>
		        <option value="등록/장학일정">등록/장학일정</option>
		        <option value="학적일정">학적일정</option>
		        <option value="수업일정">수업일정</option>
		        <option value="행사일정">행사일정</option>
		        <option value="학술사업일정">학술사업일정</option>
		        <option value="수강신청일정">수강신청일정</option>
		        <option value="기타">기타</option>
		    </select>
		  </div>
          <div class="form-group">
            <label for="asNm">일정명</label>
            <input type="text" class="form-control" id="asNm" name="asNm">
          </div>
          <div class="form-group">
            <label for="asStart">시작일시</label>
            <input type="date" class="form-control" id="asStart" name="asStart">
          </div>
          <div class="form-group">
            <label for="asEnd">종료일시</label>
            <input type="date" class="form-control" id="asEnd" name="asEnd">
          </div>
          <div class="form-group">
            <label for="asCont">메모</label>
            <input type="text" class="form-control" id="asCont" name="asCont">
          </div>
          <div class="form-group">
		    <label for="asAccePerm">열람권한</label>
		    <div class="form-inline">
		        <div class="form-check mr-3">
		            <input type="checkbox" class="form-check-input" id="asAccePermStudent" name="asAccePerm" value="student">
		            <label class="form-check-label" for="asAccePermStudent">학생</label>
		        </div>
		        <div class="form-check">
		            <input type="checkbox" class="form-check-input" id="asAccePermProfessor" name="asAccePerm" value="professor">
		            <label class="form-check-label" for="asAccePermProfessor">교수</label>
		        </div>
		    </div>
		  </div>
      </div>
      <div class="modal-footer">
        <button type="submit" class="btn btn-primary">저장</button>
        <button type="button" class="btn btn-secondary" data-dismiss="modal">취소</button>
      </div>
        </form>
    </div>
  </div>
</div>
 
 <div class="card box-shadow d-flex m-4" style="min-height: 87%;">
	<div class="h-100">
<!-- 		<div class="card-header" -->
<!-- 			style="border-radius: 20px 20px 0 0; background-color: #154FA9; font-weight: bold; color: white;"> -->
<!-- 			캘린더</div> -->
<div class="card calendar-container">
  <div id="calendar" class="calendar"></div>
   <div id="listView" class="list-view card box-shadow">
   	<div class="card-header py-3 list-title box-shadow" style="border-radius: 20px 20px 0 0;">
   		<i class="mdi mdi-checkbox-marked-circle-outline" style="color: green;">         Schedule List</i>
   	</div>
   </div>
</div>
</div>
</div>

<script>
//   '구분'에 따라 색깔 다르게 지정
  function getColorForDistinction(asDistinction) {
    if (asDistinction === '등록/장학일정') {
      return '#FFA500';
    } else if (asDistinction === '학적일정') {
      return '#2E9AFE';
    } else if (asDistinction === '수업일정') {
      return '#2E9AFE';
    } else if (asDistinction === '행사일정') {
      return '#FFA500';
    } else if (asDistinction === '학술사업일정') {
      return '#2E9AFE';
    } else if (asDistinction === '수강신청일정') {
//       return '#FFF0F5';
		 return '#2E9AFE';
    } else {
//       return '#E6E6FA';
		 return '#FFA500';
    }
  }
 
  function getListView(data){
	  var listView = document.getElementById('listView');
	  
	  var existingEvents = listView.querySelectorAll('.event-set');
	    existingEvents.forEach(function(eventElement) {
	        eventElement.remove();
	    });
	  
      for (var i = 0; i < data.length; i++) {
          var event = data[i];
          var asDistinction = event.asDistinction;
          var eventTitle = event.title;
          var startDate = new Date(event.start);
          var endDate = new Date(event.end);
         
          // YYYY-MM-DD
          var formattedStartDate = startDate.toLocaleDateString('en-CA');
          var formattedEndDate = endDate.toISOString().split('T')[0];
          
         
          // 일정 세트
          var eventSetElement = document.createElement('div');
          eventSetElement.classList.add('event-set');

          // 일정 제목
          var eventTitleElement = document.createElement('div');
          eventTitleElement.classList.add('event-title');

          // 구분 동그라미
          var distinctionCircle = document.createElement('div');
          distinctionCircle.classList.add('distinction-circle');
          distinctionCircle.style.backgroundColor = getColorForDistinction(asDistinction);
          eventTitleElement.appendChild(distinctionCircle);

          var eventTitleText = document.createElement('span');
          eventTitleText.innerText = eventTitle;
          eventTitleElement.appendChild(eventTitleText);

          eventSetElement.appendChild(eventTitleElement);
         
          // 날짜
          var eventDateElement = document.createElement('div');
          eventDateElement.classList.add('event-date');
          eventDateElement.innerText = formattedStartDate + ' ~ ' + formattedEndDate;
          eventSetElement.appendChild(eventDateElement);
         
          // 구분선
          var separatorElement = document.createElement('hr');
          separatorElement.classList.add('separator');
          eventSetElement.appendChild(separatorElement);

          // 일정 세트 -> listView에 추가
          listView.appendChild(eventSetElement);
      }
  }


  function getEventSources() {
     return {
       url: "<c:url value='/schedule/acaCalendarDS.do'/>",
//        textColor: 'black',
//        color: 'pink', // 기본 배경색
       success: function (data) {
    	   getListView(data);
    	   for (var i = 0; i < data.length; i++) {
           var asDistinction = data[i].asDistinction;
           data[i].backgroundColor = getColorForDistinction(asDistinction);
         }
       }
     };
   }

  document.addEventListener('DOMContentLoaded', function() {
    var calendarEl = document.getElementById('calendar');
    var startDateField  = document.getElementById('asStart');
    var endDateField  = document.getElementById('asEnd');
    var distinctionField = document.getElementById('asDistinction');
    var asContField = document.getElementById('asCont');
    var asAccePermCheckbox = document.getElementById('asAccePerm');
    var asAccePermStudentCheckbox = document.getElementById('asAccePermStudent'); 
    var asAccePermProfessorCheckbox = document.getElementById('asAccePermProfessor');
    
//     var showInsertButton = false; 
   
    var calendar = new FullCalendar.Calendar(calendarEl, {
      initialView : 'dayGridMonth',
      locale : 'ko',
      headerToolbar : {
        start : "prev next",
        center : "title",
        end : 'insertButton'
      },
      customButtons: {
	   	  insertButton: {
	   	      text: '일정 추가',
	   	      click: function () {
	   	        $('#exampleModal').modal('show');
	   	      }
	   	    }
	   	  },
     
      selectable : true, // 달력 일자 드래그 설정
      droppable : true,
      editable : true,
      dayMaxEvents: true, // 이벤트 오버 -> 높이 제한
      displayEventTime: false, // 시간 안 보이게
      eventSources : getEventSources(),
      
      // 수정
      eventClick : function(info) {
         var clickedEventId = info.event.id;
         var clickedEventTitle = info.event.title;
         var clickedEventStartDate = info.event.startStr;
         var clickedEventEndDate = info.event.endStr;
         var clickedEventDistinction = info.event.extendedProps.asDistinction;
         var clickedEventAsCont = info.event.extendedProps.data.asCont;
         var clickedEventAsAccePerm = info.event.extendedProps.data.asAccePerm;

         console.log(info.event.extendedProps);
         
         const enddateString = clickedEventEndDate.split('T')[0];
         const date = new Date(enddateString);
         const oneDayMilliseconds = 24 * 60 * 60 * 1000;
         const previousDate = new Date(date.getTime() - oneDayMilliseconds);

         // YYYY-MM-DD
         const formattedDate = previousDate.toLocaleDateString('en-CA');

         startDateField.value = clickedEventStartDate.split('T')[0];
         endDateField.value = formattedDate;
         document.getElementById('asCd').value = clickedEventId;
         document.getElementById('asNm').value = clickedEventTitle;
         document.getElementById('asCont').value = clickedEventAsCont;
         console.log(clickedEventAsCont)
         
         $('#asDistinction').val(clickedEventDistinction);
         distinctionField.value = clickedEventDistinction;
         
         console.log(clickedEventAsAccePerm)
		 // 열람권한 체크박스 설정
		 if (clickedEventAsAccePerm === 'STUDENT') {
	        $('#asAccePermStudent').prop('checked', true);
	        $('#asAccePermProfessor').prop('checked', false);
	    } else if (clickedEventAsAccePerm === 'PROFESSOR') {
	        $('#asAccePermStudent').prop('checked', false);
	        $('#asAccePermProfessor').prop('checked', true);
	    } else if (clickedEventAsAccePerm === 'BOTH') {
	        $('#asAccePermStudent').prop('checked', true);
	        $('#asAccePermProfessor').prop('checked', true);
	    } else {
	        $('#asAccePermStudent').prop('checked', false);
	        $('#asAccePermProfessor').prop('checked', false);
	    }
         
         $('#exampleModal').modal('show');
      },
      
	     select: function(info) {
		    var clickedEventEndDate = info.endStr;
		    const date = new Date(clickedEventEndDate);
		    date.setDate(date.getDate() - 1); // 하루 빼기
		
		    const formattedDate = date.toISOString().split('T')[0]; // ISO 8601 형식으로 변환
		
		    startDateField.value = info.startStr;
		    endDateField.value = formattedDate;
		    
		    // role에 따라 '일정추가'버튼 보이기
// 		    showInsertButton = response.role === 'ROLE_TS';
// 		    toggleInsertButton(showInsertButton);
		    
		    $('#exampleModal').modal('show');
		}

    });
   
    calendar.render();
    
 // '일정 추가' 버튼 보이기/숨기기 처리
    function toggleInsertButton(visible) {
      if (visible) {
        calendar.setOption('customButtons.insertButton', {
          text: '일정 추가',
          click: function () {
            $('#exampleModal').modal('show');
          }
        });
      } else {
        calendar.setOption('customButtons.insertButton', {});
      }
    }
   
//모달 닫힐 때 입력 필드 값을 초기화
$('#exampleModal').on('hidden.bs.modal', function(){
	$('#asCd').val('');
	$('#asDistinction').val('');
	distinctionField.value = '전체';
	$('#asNm').val('');
	$('#asStart').val('');
	$('#asEnd').val('');
	$('#asCont').val('');
// 	$('#asAccePerm').val('');
	$('#asAccePermStudent').prop('checked', false);
    $('#asAccePermProfessor').prop('checked', false);
});

$('#modalForm').on('submit', function(event){
//  	alert("저장버튼 누름");
	event.preventDefault();
	
	var formData = new FormData(this);
	distinctionField.value = '전체';
	
	$.ajax({
		type: 'POST',
		url: '<c:url value="/schedule/calendarEvent.do"/>',
		data: formData,
		processData: false,
		contentType: false,
		success: function(response){
			$('#exampleModal').modal('hide');
			
			if(response.asCd){
				var updatedEvent = calendar.getEventById(response.asCd);
				if(updatedEvent){
					updatedEvent.setProp('title', response.asNm);
					updatedEvent.setProp('asDistinction', response.asDistinction);
					updatedEvent.setStart(response.asStart);
					updatedEvent.setEnd(response.asEnd);
					updatedEvent.setProp('asCont', response.asCont);
					updatedEvent.setProp('asAccePerm', { asAccePerm: response.asAccePerm });
					calendar.addEvent(updatedEvent);
// 					updatedEvent.remove();
// 					calendar.addEvent(updatedEvent);
				}
				
			} else{
				calendar.refetchEvents();
				
			}
		},
		error: function(xhr, status, error){
			console.error('Error saving event:', error);
		}
	});
});

   
 	// 저장 버튼 클릭
    $(document).on('click', '#modalForm button[type="submit"]', function (event) {
      event.preventDefault();
      console.log('저장 버튼 클릭');
      // 모달 닫기
      $('#exampleModal').modal('hide');
    });

    // 취소 버튼 클릭
    $(document).on('click', '#exampleModal button[data-dismiss="modal"]', function () {
      console.log('취소 버튼 클릭');
      // 모달 닫기
      $('#exampleModal').modal('hide');
    });
  });

</script>