<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ taglib uri="http://www.springframework.org/tags/form" prefix="form" %>
<style>
.table th {
		text-align: center;
	}
	.table td {
		text-align: center;
	}
.gradInfo {
		background-color: rgba(0, 0, 0, 0.03);
		margin: 10px;
		padding-right: 40px;
		font-family: 'Noto Sans KR', sans-serif;
	}
	
	.gradInfo-header {
		margin: 20px 0 11px 40px;
		font-size: 14px;
		font-weight: bold;
	}
	.gradInfo-body {
		margin: -13px 40px 13px 40px;
		font-size: 12px;
	}
	.circle {
	    width: 4px;
	    height: 4px;
	    background-color: black;
	    border-radius: 50%;
	    display: inline-block;
	    margin: 0 12px 3px 6px;
	}
</style>
<div class="card box-shadow d-flex m-4" style="min-height: auto;">
      <div class="h-100">
      <div class="card-header" style="border-radius: 20px 20px 0 0; background-color:#154FA9; font-weight:bold; color:white;">졸업 이수 조건 확인</div>
      
      <div class="card gradInfo">
			<div class="gradInfo-header">
				<i class="mdi mdi-check-circle" style="color: green;"></i> 소속 단과의 졸업 이수 조건
				<hr style="border-color: black;">
			</div>
			<div class="gradInfo-body">
				<div class="circle"></div> 본인이 소속된 단과의 졸업이수조건을 확인할 수 있습니다.<br>
			    <div class="circle"></div> 표의 수치는 최소기준이며 기준치 이상의 조건을 달성해야 졸업여건이 충족됩니다.
			</div>
		</div>
      
<table class="table table-hover" style="max-width: 95%; margin-bottom: 20px; margin-top: 17px;">
		<thead class="table-light">
			<tr>
				<th>소속단과</th>
				<th>소속학과</th>
				<c:forEach items="${graduationList }" var="graduationList">
					<th>${graduationList.geGradCondType }</th>
				</c:forEach>
			</tr>
		</thead>
			<tr>
				<td>${graduation.colgeNm }</td>
				<td>${graduation.dtNm }</td>
				<c:forEach items="${graduationList }" var="graduationList">
				<td>
					${graduationList.gradCond }
				</td>
				</c:forEach>
			</tr>
</table>
</div></div>

<div class="card box-shadow d-flex m-4" style="min-height: auto;">
	<div class="h-100">
		<div class="card-header" style="border-radius: 20px 20px 0 0; background-color:#154FA9; font-weight:bold; color:white;">졸업 이수 내역 확인</div>
		
<!-- 		학생의 봉사 시간 (시간) : 60<br> -->
<%-- 		학생의 전공 이수 학점 : ${totalMajorLectCred }<br> --%>
<%-- 		학생의 전공 평점 평균 : ${totalMajorAvgGrade }<br> --%>
<%-- 		학생의 졸업 이수 학점 : ${totalLectCred }<br> --%>
<%-- 		학생의 평점 평균 : ${totalAvgGrade } --%>
<%-- 		사이즈 : ${graduationList[0]['geGradCondType']} --%>
<!-- 		<br><br><br> -->
<!-- 		졸업 봉사 시간 (시간) : 72<br> -->
<!-- 		졸업 전공 이수 학점 : 40<br> -->
<!-- 		졸업 전공 평점 평균 : 2.5<br> -->
<!-- 		졸업 이수 학점 : 128<br> -->
<!-- 		졸업 평점 평균 : 2.0 -->
		<div style="display: flex; align-items: center; justify-content: center;">
			<div style="width: 550px; height: 450px;">
			<canvas id="graduationChart" width="550" height="400"></canvas>
			</div>
			<div>
			<table class="table table-hover">
				<thead class="table-light">
					<tr>
						<th>졸업 요건</th>
						<th>졸업 이수 내역</th>
						<th>달성률 (%)</th>
				    </tr>
				</thead>
				<tbody>
					<c:forEach items="${graduationList }" var="graduationList">
						<tr>
							<td>${graduationList.geGradCondType }</td>
						</tr>
					</c:forEach>
				</tbody>
			</table>
			</div>
		</div>
	</div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
// 학생이 달성한 졸업 조건
var studentData = {};
var values = [60, ${totalMajorLectCred }, ${totalMajorAvgGrade }, ${totalLectCred }, ${totalAvgGrade }];

<c:forEach items="${graduationList}" var="graduation" varStatus="cnt">
	var key = '${graduation.geGradCondType}';
	var value = values[${cnt.index}];
	
	studentData[key] = value;
	console.log("Key: " + key + ", Value: " + value);
</c:forEach>

// 최소 조건 데이터
var minimumRequirements = {
	<c:forEach items="${graduationList}" var="graduationItem">
       "${graduationItem.geGradCondType}": ${graduationItem.gradCond},
    </c:forEach>
};

//데이터를 백분율로 변환합니다
var labels = Object.keys(studentData);
var studentAchieved = labels.map(label => (studentData[label] / minimumRequirements[label]) * 100);
var requiredMinimums = labels.map(label => 100);

// 막대 그래프를 생성합니다
var ctx = document.getElementById("graduationChart").getContext("2d");
var myChart = new Chart(ctx, {
    type: "bar",
    data: {
        labels: labels,
        datasets: [
            {
                label: "달성 정도 (%)",
                data: studentAchieved,
                backgroundColor: function(context) {
                    var value = context.dataset.data[context.dataIndex];
                    return value < 100 ? "rgba(54, 162, 235, 0.5)" : "rgba(0, 255, 0, 0.5)";
                },
                borderColor: function(context) {
                    var value = context.dataset.data[context.dataIndex];
                    return value < 100 ? "rgba(54, 162, 235, 1)" : "rgba(0, 255, 0, 1)";
                },
                barThickness: 40, // 막대의 굵기를 설정합니다.
                borderWidth: 1,
            },
        ],
    },
    options: {
    	layout: {
            padding: {
                top: 20, // 상단 간격 조절
            },
    	},
        scales: {
            y: {
                beginAtZero: true,
                max: 100, // y축 최대값은 100
                title: {
                    display: true,
                    text: "달성 정도 (%)", // y축 레이블 수정
                },
            },
        },
        plugins: {
            legend: {
                display: true,
                position: "top",
            },
        },
    },
});
</script>