package kr.or.ddit.staff.controller;

import javax.inject.Inject;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.Errors;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;

import kr.or.ddit.serviceresult.ServiceResult;
import kr.or.ddit.staff.service.StaffService;
import kr.or.ddit.staff.vo.StaffVO;
import kr.or.ddit.validate.groups.InsertGroup;

@Controller
@RequestMapping("/staff/staffInsert.do")
public class StaffInsertController {

	@Inject
	private StaffService service;
	
	@ModelAttribute("staff")
	public StaffVO staff() {
		return new StaffVO();
	}
	
	@GetMapping
	public String getHandler() {
		return "staff/staffForm";
	}
	
	@PostMapping
	public String postHandler(
		@Validated(InsertGroup.class) @ModelAttribute("staff") StaffVO staff
		, Errors errors
		, Model model
	) {
		String logicalViewName = null;
		if(!errors.hasErrors()) {
			ServiceResult result = service.createStaff(staff);
			switch(result) {
			case PKDUPLICATE:
				model.addAttribute("message", "직번이 중복됩니다. 다시 확인해주세요.");
				logicalViewName = "staff/staffForm";
				break;
			case OK:
				logicalViewName = "redirect:/staff/staffView.do?who="+staff.getTsCd();
				break;
			default:
				model.addAttribute("message", "서버 오류, 잠시 뒤 다시 시도하시오.");
				logicalViewName = "staff/staffForm";
				break;
			}
		}else {
			logicalViewName = "staff/staffForm";
			}
		return logicalViewName;
	}
	
}